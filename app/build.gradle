apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

def mApplicationId = "me.juhezi.codewars"
def mBateApplicationId = "me.juhezi.bate.codewars"

def app_name_release = "CodeWars"
def debug_suffix = "debug"

static def currentSecond() {
    return new Date().format("ss", TimeZone.getTimeZone("GMT+8"))
}

/**
 * 获取当前时间，精确到天
 * @return
 */
static def currentTime() {
    return new Date().format("yyyy_MM_dd", TimeZone.getTimeZone("GMT+8"))
}

android {
    compileSdkVersion rootProject.ext.androidCompileSdkVersion
    buildToolsVersion rootProject.ext.androidBuildToolsVersion
    defaultConfig {
        applicationId mApplicationId
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode VERSION_CODE as int
        versionName VERSION_NAME
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
//        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            resValue("string", "app_name", app_name_release)
            applicationVariants.all { variant ->
                if (variant.buildType.name == 'release') {
                    variant.outputs.each { output ->
                        def outputFile = output.outputFile
                        if (outputFile != null && outputFile.name.endsWith('.apk')) {
                            def fileName = "${app_name_release}_v${defaultConfig.versionName}_${currentTime()}_${variant.flavorName}.apk"
                            output.outputFile = new File(outputFile.parent, fileName)
                        }
                    }
                }
            }
        }

        debug {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            resValue("string", "app_name", "${app_name_release}_${debug_suffix}_${currentSecond()}")
        }
    }

    productFlavors {
        codewars {
            applicationId mApplicationId
            versionCode VERSION_CODE as int
            versionName VERSION_NAME
        }
        codewars_bate {
            applicationId mBateApplicationId
            versionCode VERSION_CODE as int
            versionName VERSION_NAME
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlinVersion"
    compile "com.android.support.constraint:constraint-layout:$rootProject.ext.constraintLayoutVersion"
    compile "com.android.support:support-v4:$rootProject.ext.supportLibVersion"
    compile "com.android.support:support-annotations:$rootProject.ext.supportLibVersion"
    compile "com.android.support:appcompat-v7:$rootProject.ext.supportLibVersion"
    compile "com.android.support:recyclerview-v7:$rootProject.ext.supportLibVersion"
    compile "com.android.support:cardview-v7:$rootProject.ext.supportLibVersion"
    compile "com.android.support:design:$rootProject.ext.supportLibVersion"
    // compile "com.android.support:multidex:$rootProject.ext.multidexVersion"
    testCompile "junit:junit:$rootProject.ext.junitVersion"

    //module
    compile project(':base')
}

repositories {
    mavenCentral()
}
